<**/*.ml{,i}>: warn(-40), no_alias_deps
<**/*>: thread
# This prevents the implicit addition of -ppx options by ocamlfind
<**/*>: predicate(custom_ppx)
<src/*.ml>: for-pack(Core)
<top/*.ml>: for-pack(Core_top)
<src/*.ml{,i}>: pp(ppx-jane -dump-ast -inline-test-drop -bench-drop -inline-test-lib fake_for_drop)
<src/*.ml{,i}>: pp_deps_for_src
# OASIS_START
# DO NOT EDIT (digest: f503d0f9699d61d8f6fd86e7741ccf19)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library core
"src/core.cmxs": use_core
"src/bigbuffer.cmx": for-pack(Core)
"src/bigstring.cmx": for-pack(Core)
"src/bigstring_marshal.cmx": for-pack(Core)
"src/caml.cmx": for-pack(Core)
"src/check_std.cmx": for-pack(Core)
"src/command.cmx": for-pack(Core)
"src/core_condition.cmx": for-pack(Core)
"src/core_filename.cmx": for-pack(Core)
"src/core_list.cmx": for-pack(Core)
"src/core_mutex.cmx": for-pack(Core)
"src/core_sys.cmx": for-pack(Core)
"src/core_thread.cmx": for-pack(Core)
"src/core_unix.cmx": for-pack(Core)
"src/crc.cmx": for-pack(Core)
"src/daemon.cmx": for-pack(Core)
"src/date.cmx": for-pack(Core)
"src/date0.cmx": for-pack(Core)
"src/interval.cmx": for-pack(Core)
"src/interval_intf.cmx": for-pack(Core)
"src/iobuf.cmx": for-pack(Core)
"src/iobuf_debug.cmx": for-pack(Core)
"src/iobuf_intf.cmx": for-pack(Core)
"src/iobuf_tests.cmx": for-pack(Core)
"src/limiter.cmx": for-pack(Core)
"src/limiter_unit_tests.cmx": for-pack(Core)
"src/linux_ext.cmx": for-pack(Core)
"src/linux_ext_intf.cmx": for-pack(Core)
"src/lock_file.cmx": for-pack(Core)
"src/mutex0.cmx": for-pack(Core)
"src/nano_mutex.cmx": for-pack(Core)
"src/ofday.cmx": for-pack(Core)
"src/piecewise_linear.cmx": for-pack(Core)
"src/piecewise_linear_intf.cmx": for-pack(Core)
"src/process_env.cmx": for-pack(Core)
"src/schedule.cmx": for-pack(Core)
"src/schedule_unit_tests.cmx": for-pack(Core)
"src/signal.cmx": for-pack(Core)
"src/span.cmx": for-pack(Core)
"src/squeue.cmx": for-pack(Core)
"src/stable.cmx": for-pack(Core)
"src/std.cmx": for-pack(Core)
"src/syscall_result.cmx": for-pack(Core)
"src/syscall_result_intf.cmx": for-pack(Core)
"src/syslog.cmx": for-pack(Core)
"src/thread_safe_queue_unit_tests.cmx": for-pack(Core)
"src/time.cmx": for-pack(Core)
"src/time0.cmx": for-pack(Core)
"src/time_internal.cmx": for-pack(Core)
"src/time_ns.cmx": for-pack(Core)
"src/time_ns_benchmarks.cmx": for-pack(Core)
"src/time_stamp_counter.cmx": for-pack(Core)
"src/time_stamp_counter_benchmarks.cmx": for-pack(Core)
"src/timing_wheel_float.cmx": for-pack(Core)
"src/timing_wheel_float_unit_tests.cmx": for-pack(Core)
"src/unix_error.cmx": for-pack(Core)
"src/user_and_group.cmx": for-pack(Core)
"src/uuid.cmx": for-pack(Core)
"src/version_util.cmx": for-pack(Core)
"src/weak_hashtbl.cmx": for-pack(Core)
"src/zone.cmx": for-pack(Core)
<src/core.{cma,cmxa}>: oasis_library_core_cclib
"src/libcore_stubs.lib": oasis_library_core_cclib
"src/dllcore_stubs.dll": oasis_library_core_cclib
"src/libcore_stubs.a": oasis_library_core_cclib
"src/dllcore_stubs.so": oasis_library_core_cclib
<src/core.{cma,cmxa}>: use_libcore_stubs
<src/*.ml{,i,y}>: package(bin_prot)
<src/*.ml{,i,y}>: package(core_kernel)
<src/*.ml{,i,y}>: package(fieldslib)
<src/*.ml{,i,y}>: package(ppx_assert.runtime-lib)
<src/*.ml{,i,y}>: package(ppx_bench.runtime-lib)
<src/*.ml{,i,y}>: package(ppx_expect.collector)
<src/*.ml{,i,y}>: package(ppx_inline_test.runtime-lib)
<src/*.ml{,i,y}>: package(sexplib)
<src/*.ml{,i,y}>: package(sexplib.unix)
<src/*.ml{,i,y}>: package(threads)
<src/*.ml{,i,y}>: package(typerep)
<src/*.ml{,i,y}>: package(variantslib)
"src/bigstring_stubs.c": package(bin_prot)
"src/bigstring_stubs.c": package(core_kernel)
"src/bigstring_stubs.c": package(fieldslib)
"src/bigstring_stubs.c": package(ppx_assert.runtime-lib)
"src/bigstring_stubs.c": package(ppx_bench.runtime-lib)
"src/bigstring_stubs.c": package(ppx_expect.collector)
"src/bigstring_stubs.c": package(ppx_inline_test.runtime-lib)
"src/bigstring_stubs.c": package(sexplib)
"src/bigstring_stubs.c": package(sexplib.unix)
"src/bigstring_stubs.c": package(threads)
"src/bigstring_stubs.c": package(typerep)
"src/bigstring_stubs.c": package(variantslib)
"src/crc_stubs.c": package(bin_prot)
"src/crc_stubs.c": package(core_kernel)
"src/crc_stubs.c": package(fieldslib)
"src/crc_stubs.c": package(ppx_assert.runtime-lib)
"src/crc_stubs.c": package(ppx_bench.runtime-lib)
"src/crc_stubs.c": package(ppx_expect.collector)
"src/crc_stubs.c": package(ppx_inline_test.runtime-lib)
"src/crc_stubs.c": package(sexplib)
"src/crc_stubs.c": package(sexplib.unix)
"src/crc_stubs.c": package(threads)
"src/crc_stubs.c": package(typerep)
"src/crc_stubs.c": package(variantslib)
"src/iobuf_stubs.c": package(bin_prot)
"src/iobuf_stubs.c": package(core_kernel)
"src/iobuf_stubs.c": package(fieldslib)
"src/iobuf_stubs.c": package(ppx_assert.runtime-lib)
"src/iobuf_stubs.c": package(ppx_bench.runtime-lib)
"src/iobuf_stubs.c": package(ppx_expect.collector)
"src/iobuf_stubs.c": package(ppx_inline_test.runtime-lib)
"src/iobuf_stubs.c": package(sexplib)
"src/iobuf_stubs.c": package(sexplib.unix)
"src/iobuf_stubs.c": package(threads)
"src/iobuf_stubs.c": package(typerep)
"src/iobuf_stubs.c": package(variantslib)
"src/linux_ext_stubs.c": package(bin_prot)
"src/linux_ext_stubs.c": package(core_kernel)
"src/linux_ext_stubs.c": package(fieldslib)
"src/linux_ext_stubs.c": package(ppx_assert.runtime-lib)
"src/linux_ext_stubs.c": package(ppx_bench.runtime-lib)
"src/linux_ext_stubs.c": package(ppx_expect.collector)
"src/linux_ext_stubs.c": package(ppx_inline_test.runtime-lib)
"src/linux_ext_stubs.c": package(sexplib)
"src/linux_ext_stubs.c": package(sexplib.unix)
"src/linux_ext_stubs.c": package(threads)
"src/linux_ext_stubs.c": package(typerep)
"src/linux_ext_stubs.c": package(variantslib)
"src/ocaml_utils_stubs.c": package(bin_prot)
"src/ocaml_utils_stubs.c": package(core_kernel)
"src/ocaml_utils_stubs.c": package(fieldslib)
"src/ocaml_utils_stubs.c": package(ppx_assert.runtime-lib)
"src/ocaml_utils_stubs.c": package(ppx_bench.runtime-lib)
"src/ocaml_utils_stubs.c": package(ppx_expect.collector)
"src/ocaml_utils_stubs.c": package(ppx_inline_test.runtime-lib)
"src/ocaml_utils_stubs.c": package(sexplib)
"src/ocaml_utils_stubs.c": package(sexplib.unix)
"src/ocaml_utils_stubs.c": package(threads)
"src/ocaml_utils_stubs.c": package(typerep)
"src/ocaml_utils_stubs.c": package(variantslib)
"src/recvmmsg.c": package(bin_prot)
"src/recvmmsg.c": package(core_kernel)
"src/recvmmsg.c": package(fieldslib)
"src/recvmmsg.c": package(ppx_assert.runtime-lib)
"src/recvmmsg.c": package(ppx_bench.runtime-lib)
"src/recvmmsg.c": package(ppx_expect.collector)
"src/recvmmsg.c": package(ppx_inline_test.runtime-lib)
"src/recvmmsg.c": package(sexplib)
"src/recvmmsg.c": package(sexplib.unix)
"src/recvmmsg.c": package(threads)
"src/recvmmsg.c": package(typerep)
"src/recvmmsg.c": package(variantslib)
"src/signal_stubs.c": package(bin_prot)
"src/signal_stubs.c": package(core_kernel)
"src/signal_stubs.c": package(fieldslib)
"src/signal_stubs.c": package(ppx_assert.runtime-lib)
"src/signal_stubs.c": package(ppx_bench.runtime-lib)
"src/signal_stubs.c": package(ppx_expect.collector)
"src/signal_stubs.c": package(ppx_inline_test.runtime-lib)
"src/signal_stubs.c": package(sexplib)
"src/signal_stubs.c": package(sexplib.unix)
"src/signal_stubs.c": package(threads)
"src/signal_stubs.c": package(typerep)
"src/signal_stubs.c": package(variantslib)
"src/syslog_stubs.c": package(bin_prot)
"src/syslog_stubs.c": package(core_kernel)
"src/syslog_stubs.c": package(fieldslib)
"src/syslog_stubs.c": package(ppx_assert.runtime-lib)
"src/syslog_stubs.c": package(ppx_bench.runtime-lib)
"src/syslog_stubs.c": package(ppx_expect.collector)
"src/syslog_stubs.c": package(ppx_inline_test.runtime-lib)
"src/syslog_stubs.c": package(sexplib)
"src/syslog_stubs.c": package(sexplib.unix)
"src/syslog_stubs.c": package(threads)
"src/syslog_stubs.c": package(typerep)
"src/syslog_stubs.c": package(variantslib)
"src/time_stamp_counter_stubs.c": package(bin_prot)
"src/time_stamp_counter_stubs.c": package(core_kernel)
"src/time_stamp_counter_stubs.c": package(fieldslib)
"src/time_stamp_counter_stubs.c": package(ppx_assert.runtime-lib)
"src/time_stamp_counter_stubs.c": package(ppx_bench.runtime-lib)
"src/time_stamp_counter_stubs.c": package(ppx_expect.collector)
"src/time_stamp_counter_stubs.c": package(ppx_inline_test.runtime-lib)
"src/time_stamp_counter_stubs.c": package(sexplib)
"src/time_stamp_counter_stubs.c": package(sexplib.unix)
"src/time_stamp_counter_stubs.c": package(threads)
"src/time_stamp_counter_stubs.c": package(typerep)
"src/time_stamp_counter_stubs.c": package(variantslib)
"src/timespec.c": package(bin_prot)
"src/timespec.c": package(core_kernel)
"src/timespec.c": package(fieldslib)
"src/timespec.c": package(ppx_assert.runtime-lib)
"src/timespec.c": package(ppx_bench.runtime-lib)
"src/timespec.c": package(ppx_expect.collector)
"src/timespec.c": package(ppx_inline_test.runtime-lib)
"src/timespec.c": package(sexplib)
"src/timespec.c": package(sexplib.unix)
"src/timespec.c": package(threads)
"src/timespec.c": package(typerep)
"src/timespec.c": package(variantslib)
"src/unix_stubs.c": package(bin_prot)
"src/unix_stubs.c": package(core_kernel)
"src/unix_stubs.c": package(fieldslib)
"src/unix_stubs.c": package(ppx_assert.runtime-lib)
"src/unix_stubs.c": package(ppx_bench.runtime-lib)
"src/unix_stubs.c": package(ppx_expect.collector)
"src/unix_stubs.c": package(ppx_inline_test.runtime-lib)
"src/unix_stubs.c": package(sexplib)
"src/unix_stubs.c": package(sexplib.unix)
"src/unix_stubs.c": package(threads)
"src/unix_stubs.c": package(typerep)
"src/unix_stubs.c": package(variantslib)
"src/unix_time_stubs.c": package(bin_prot)
"src/unix_time_stubs.c": package(core_kernel)
"src/unix_time_stubs.c": package(fieldslib)
"src/unix_time_stubs.c": package(ppx_assert.runtime-lib)
"src/unix_time_stubs.c": package(ppx_bench.runtime-lib)
"src/unix_time_stubs.c": package(ppx_expect.collector)
"src/unix_time_stubs.c": package(ppx_inline_test.runtime-lib)
"src/unix_time_stubs.c": package(sexplib)
"src/unix_time_stubs.c": package(sexplib.unix)
"src/unix_time_stubs.c": package(threads)
"src/unix_time_stubs.c": package(typerep)
"src/unix_time_stubs.c": package(variantslib)
"src/version_util_fallback_stubs.c": package(bin_prot)
"src/version_util_fallback_stubs.c": package(core_kernel)
"src/version_util_fallback_stubs.c": package(fieldslib)
"src/version_util_fallback_stubs.c": package(ppx_assert.runtime-lib)
"src/version_util_fallback_stubs.c": package(ppx_bench.runtime-lib)
"src/version_util_fallback_stubs.c": package(ppx_expect.collector)
"src/version_util_fallback_stubs.c": package(ppx_inline_test.runtime-lib)
"src/version_util_fallback_stubs.c": package(sexplib)
"src/version_util_fallback_stubs.c": package(sexplib.unix)
"src/version_util_fallback_stubs.c": package(threads)
"src/version_util_fallback_stubs.c": package(typerep)
"src/version_util_fallback_stubs.c": package(variantslib)
# Library core_top
"top/core_top.cmxs": use_core_top
"top/core_install_printers.cmx": for-pack(Core_top)
<top/*.ml{,i,y}>: package(bin_prot)
<top/*.ml{,i,y}>: package(compiler-libs)
<top/*.ml{,i,y}>: package(core_kernel)
<top/*.ml{,i,y}>: package(fieldslib)
<top/*.ml{,i,y}>: package(ppx_assert.runtime-lib)
<top/*.ml{,i,y}>: package(ppx_bench.runtime-lib)
<top/*.ml{,i,y}>: package(ppx_expect.collector)
<top/*.ml{,i,y}>: package(ppx_inline_test.runtime-lib)
<top/*.ml{,i,y}>: package(sexplib)
<top/*.ml{,i,y}>: package(sexplib.unix)
<top/*.ml{,i,y}>: package(threads)
<top/*.ml{,i,y}>: package(typerep)
<top/*.ml{,i,y}>: package(variantslib)
<top/*.ml{,i,y}>: use_core
# OASIS_STOP
